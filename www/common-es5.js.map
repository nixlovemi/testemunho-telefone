{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","webpack:///src/app/pg-add-content/pg-add-content.page.html","webpack:///src/app/pg-add-phone/pg-add-phone.page.html","webpack:///src/app/pg-add-content/pg-add-content.page.scss","webpack:///src/app/pg-add-content/pg-add-content.page.ts","webpack:///src/app/pg-add-phone/pg-add-phone.page.scss","webpack:///src/app/pg-add-phone/pg-add-phone.page.ts"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","length","undefined","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","ev","direction","test","router","document","querySelector","preventDefault","push","Keyboard","PgAddContentPage","modalController","utilsSrv","db","zone","strTitle","arrContactTypes","frmContent","date","type","name","text","publication","notes","getContactTypes","format","getContact","ddd","phone","idx","retContact","anotations","dismiss","reload","ret","error","msg","hide","retValidate","validateData","showAlert","contactInfo","editContact","addContact","setTimeout","role","cssClass","handler","blah","postDelete","deleteContact","template","PgAddPhonePage","segmentValue","vDDD","parseInt","vSinglePhone","singlePhone","vMultiplePhone","multiplePhone","vMultipleLastStart","multipleLastStart","vMultipleLastEnd","multipleLastEnd","minPhone","maxPhone","addPhone","retInsert","i","currentI","sPhone","padStart","newId","event"],"mappings":"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","file":"common-es5.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n    <ion-toolbar> <!-- mode=\\\"ios\\\" -->\\n        <ion-buttons slot=\\\"start\\\" (click)=\\\"close()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/close.svg\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title class=\\\"toolbar-title\\\">\\n            {{ strTitle }} Registro\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" (click)=\\\"save()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/ok.svg\\\" color=\\\"success\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n    <div class=\\\"home-header\\\">\\n        <h1 class=\\\"title\\\">{{ strTitle }}</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <ion-card class=\\\"card-history\\\">\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Data *</ion-label>\\n                    <ion-datetime\\n                        name=\\\"mes_base\\\"\\n                        [(ngModel)]=\\\"frmContent.date\\\"\\n                        display-format=\\\"DD/MM/YYYY\\\"\\n                        picker-format=\\\"DD MMMM YYYY\\\"\\n                        month-names=\\\"Janeiro, Fevereiro, Março, Abril, Maio, Junho, Julho, Agosto, Setembro, Outubro, Novembro, Dezembro\\\"\\n                        (ionCancel)=\\\"clearInput('date')\\\"\\n                        cancelText=\\\"Limpar\\\"\\n                        doneText=\\\"Selecionar\\\"\\n                        class=\\\"ion-text-start\\\"\\n                    ></ion-datetime>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Tipo *</ion-label>\\n                    <ion-select interface=\\\"action-sheet\\\" [(ngModel)]=\\\"frmContent.type\\\"> <!-- popover -->\\n                        <ion-select-option *ngFor=\\\"let type of arrContactTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.name\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Texto</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Publicação</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.publication\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Anotações *</ion-label>\\n                    <ion-textarea [(ngModel)]=\\\"frmContent.notes\\\" autoGrow=\\\"true\\\"></ion-textarea>\\n                </ion-item>\\n            </ion-card-content>\\n\\n            <ion-button (click)=\\\"delete()\\\" *ngIf=\\\"type === 'edit'\\\" color=\\\"danger\\\" expand=\\\"block\\\" id=\\\"btn-delete\\\">\\n                <ion-icon slot=\\\"start\\\" src=\\\"assets/trash.svg\\\"></ion-icon>\\n                Deletar Registro\\n            </ion-button>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n  \";","export default \"<ion-header>\\n    <ion-toolbar> <!-- mode=\\\"ios\\\" -->\\n        <ion-buttons slot=\\\"start\\\" (click)=\\\"close()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/close.svg\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title class=\\\"toolbar-title\\\">\\n            Adicionar Telefone\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" (click)=\\\"save()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/ok.svg\\\" color=\\\"success\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n    <div class=\\\"home-header\\\">\\n        <h1 class=\\\"title\\\">Adicionar</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <ion-card class=\\\"card-history\\\">\\n            <ion-card-header>\\n                <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"segmentValue\\\">\\n                    <ion-segment-button value=\\\"single\\\">\\n                        <ion-label>Único</ion-label>\\n                    </ion-segment-button>\\n                    <ion-segment-button value=\\\"multiple\\\">\\n                        <ion-label>Múltiplo</ion-label>\\n                    </ion-segment-button>\\n                </ion-segment>\\n            </ion-card-header>\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">DDD</ion-label>\\n                    <ion-input inputmode=\\\"tel\\\" [(ngModel)]=\\\"ddd\\\" maxlength=\\\"2\\\"></ion-input>\\n                </ion-item>\\n\\n                <div *ngIf=\\\"segmentValue === 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Telefone</ion-label>\\n                        <ion-input appMyNumberOnly inputmode=\\\"tel\\\" maxlength=\\\"9\\\" [(ngModel)]=\\\"singlePhone\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <div *ngIf=\\\"segmentValue !== 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Início Telefone</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"multiplePhone\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (de)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastStart\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (até)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastEnd\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n            </ion-card-content>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n  \";","export default \"ion-card-content {\\n  padding-left: 0 !important;\\n}\\n\\n.card-history {\\n  padding: 0 16px 20px 16px;\\n}\\n\\n#btn-delete {\\n  font-size: 14px;\\n}\\n\\n#btn-delete ion-icon {\\n  font-size: 12px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZWFuZHJvcGFycmEvRG9jdW1lbnRzL1Byb2pldG9zL3Rlc3RlbXVuaG8tdGVsZWZvbmUvc3JjL2FwcC9wZy1hZGQtY29udGVudC9wZy1hZGQtY29udGVudC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BnLWFkZC1jb250ZW50L3BnLWFkZC1jb250ZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUEwQjtBQ0M5Qjs7QURDQTtFQUNJLHlCQUF5QjtBQ0U3Qjs7QURBQTtFQUNJLGVBQWU7QUNHbkI7O0FESkE7RUFJUSxlQUFlO0FDSXZCIiwiZmlsZSI6InNyYy9hcHAvcGctYWRkLWNvbnRlbnQvcGctYWRkLWNvbnRlbnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQtY29udGVudCB7XG4gICAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG59XG4uY2FyZC1oaXN0b3J5IHtcbiAgICBwYWRkaW5nOiAwIDE2cHggMjBweCAxNnB4O1xufVxuI2J0bi1kZWxldGUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcblxuICAgIGlvbi1pY29uIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbn0iLCJpb24tY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi5jYXJkLWhpc3Rvcnkge1xuICBwYWRkaW5nOiAwIDE2cHggMjBweCAxNnB4O1xufVxuXG4jYnRuLWRlbGV0ZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuI2J0bi1kZWxldGUgaW9uLWljb24ge1xuICBmb250LXNpemU6IDEycHg7XG59XG4iXX0= */\";","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nconst { Keyboard } = Plugins;\n\nimport * as moment from 'moment';\nimport { UtilsService } from '../utils.service';\nimport { DatabaseService, ContactInfo } from './../database.service';\n\n@Component({\n    selector: 'app-pg-add-content',\n    templateUrl: './pg-add-content.page.html',\n    styleUrls: ['./pg-add-content.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class PgAddContentPage implements OnInit {\n    @Input() type: string;\n    @Input() ddd: string;\n    @Input() phone: string;\n    @Input() idx: string;\n\n    strTitle = '';\n    arrContactTypes = [];\n    frmContent = {\n        date: '',\n        type: '',\n        name: '',\n        text: '',\n        publication: '',\n        notes : ''\n    };\n    contactInfo: ContactInfo;\n\n    constructor(\n        public modalController: ModalController,\n        private utilsSrv: UtilsService,\n        private db: DatabaseService,\n        private zone: NgZone,\n    ) {\n        this.arrContactTypes = db.getContactTypes();\n    }\n\n    async ngOnInit() {\n        this.frmContent.date = moment().format('YYYY-MM-DD');\n        this.strTitle        = (this.type === 'edit') ? 'Editar' : 'Adicionar';\n\n        const retContact     = await this.db.getContact(this.ddd, this.phone, this.idx);\n        if (retContact !== false) {\n            this.frmContent.date        = retContact.date;\n            this.frmContent.type        = retContact.type;\n            this.frmContent.name        = retContact.name;\n            this.frmContent.text        = retContact.text;\n            this.frmContent.publication = retContact.publication;\n            this.frmContent.notes       = retContact.anotations;\n        }\n    }\n\n    close() {\n        this.modalController.dismiss({\n            reload: false\n        });\n    }\n\n    clearInput(element: any){\n        this.frmContent[element] = '';\n    }\n\n    private validateData() {\n        const ret = {\n            error: false,\n            msg: ''\n        };\n\n        if ( this.frmContent.date === '' ){\n            ret.error = true;\n            ret.msg   = 'Informe a data';\n        } else if ( this.frmContent.type === '' ) {\n            ret.error = true;\n            ret.msg   = 'Selecione o tipo';\n        } else if ( this.frmContent.notes.trim().length < 2 ) {\n            ret.error = true;\n            ret.msg   = 'Insira uma anotação';\n        }\n\n        return ret;\n    }\n\n    async save() {\n        Keyboard.hide();\n\n        const retValidate = this.validateData();\n        if (retValidate.error){\n            this.utilsSrv.showAlert('Alerta', '', retValidate.msg, ['OK']);\n        } else {\n            this.contactInfo = {\n                ddd: this.ddd,\n                phone: this.phone,\n                date: this.frmContent.date,\n                type: this.frmContent.type,\n                name: this.frmContent.name,\n                text: this.frmContent.text,\n                publication: this.frmContent.publication,\n                anotations: this.frmContent.notes,\n            };\n\n            if (this.type === 'edit') {\n                const ret = await this.db.editContact(this.contactInfo, this.idx);\n            } else {\n                const ret = await this.db.addContact(this.contactInfo);\n            }\n\n            setTimeout(() => {\n                this.modalController.dismiss({\n                    reload: true,\n                });\n            }, 400);\n        }\n    }\n\n    async delete() {\n        this.utilsSrv.showAlert('Confirmação!', '', 'Deseja realmente deletar esse registro? Essa ação não poderá ser desfeita.', [\n            {\n                text: 'Não ...',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: (blah) => { }\n            }, {\n                text: 'Sim!',\n                handler: () => {\n                    this.postDelete();\n                }\n            }\n        ]);\n    }\n\n    private async postDelete() {\n        const ret = await this.db.deleteContact(this.ddd, this.phone, this.idx);\n        if (ret){\n            this.modalController.dismiss({\n                reload: true,\n            });\n        }\n    }\n}\n","export default \"ion-card-content {\\n  padding-left: 0 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZWFuZHJvcGFycmEvRG9jdW1lbnRzL1Byb2pldG9zL3Rlc3RlbXVuaG8tdGVsZWZvbmUvc3JjL2FwcC9wZy1hZGQtcGhvbmUvcGctYWRkLXBob25lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGctYWRkLXBob25lL3BnLWFkZC1waG9uZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwwQkFBMEI7QUNDOUIiLCJmaWxlIjoic3JjL2FwcC9wZy1hZGQtcGhvbmUvcGctYWRkLXBob25lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xufSIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nconst { Keyboard } = Plugins;\n\nimport { UtilsService } from '../utils.service';\nimport { DatabaseService } from './../database.service';\n\n@Component({\n  selector: 'app-pg-add-phone',\n  templateUrl: './pg-add-phone.page.html',\n  styleUrls: ['./pg-add-phone.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class PgAddPhonePage implements OnInit {\n    segmentValue = 'single';\n    ddd: any;\n    singlePhone: any;\n    multiplePhone: any;\n    multipleLastStart: any;\n    multipleLastEnd: any;\n\n    constructor(\n        public modalController: ModalController,\n        private utilsSrv: UtilsService,\n        private db: DatabaseService,\n    ) { }\n\n    ngOnInit() {\n    }\n\n    close() {\n        this.modalController.dismiss({\n            reload: false\n        });\n    }\n\n    private validateData() {\n        const ret = {\n            error: false,\n            msg: ''\n        };\n\n        const vDDD               = (typeof this.ddd === 'undefined') ? 0 : parseInt(this.ddd, 10);\n        const vSinglePhone       = (typeof this.singlePhone !== 'undefined') ? this.singlePhone : '';\n        const vMultiplePhone     = (typeof this.multiplePhone !== 'undefined') ? this.multiplePhone : '';\n        const vMultipleLastStart = (typeof this.multipleLastStart !== 'undefined') ? this.multipleLastStart : '';\n        const vMultipleLastEnd   = (typeof this.multipleLastEnd !== 'undefined') ? this.multipleLastEnd : '';\n\n        if ( vDDD <= 0 || vDDD > 99 ){\n            ret.error = true;\n            ret.msg   = 'Informe o DDD entre 01 e 99';\n        } else {\n            if (this.segmentValue === 'single'){\n                if (vSinglePhone.length !== 9 && vSinglePhone.length !== 8){\n                    ret.error = true;\n                    ret.msg   = 'Informe o telefone com 8 ou 9 dígitos';\n                }\n            } else {\n                if (vMultiplePhone.length !== 5 && vMultiplePhone.length !== 4){\n                    ret.error = true;\n                    ret.msg   = 'Informe o início do telefone com 4 ou 5 dígitos';\n                } else if (vMultipleLastStart.length !== 4 || vMultipleLastEnd.length !== 4) {\n                    ret.error = true;\n                    ret.msg   = 'Informe os últimos dígitos do telefone com 4 dígitos';\n                } else {\n                    const minPhone = parseInt(this.multipleLastStart, 10);\n                    const maxPhone = parseInt(this.multipleLastEnd, 10);\n\n                    if (minPhone >= maxPhone){\n                        ret.error = true;\n                        ret.msg   = 'Informe o último número (de:) menor que o último número (para:)';\n                    } else if (maxPhone - minPhone > 100) {\n                        ret.error = true;\n                        ret.msg   = 'Só é permitido inserir 100 números por vez!';\n                    }\n                }\n            }\n        }\n\n        return ret;\n    }\n\n    async save() {\n        Keyboard.hide();\n\n        const retValidate = this.validateData();\n        if (retValidate.error){\n            this.utilsSrv.showAlert('Alerta', '', retValidate.msg, ['OK']);\n        } else {\n            if (this.segmentValue === 'single'){\n                const retInsert = await this.db.addPhone(\n                    (this.ddd.length === 1) ? '0' + this.ddd : this.ddd,\n                    this.singlePhone\n                );\n            } else {\n                const minPhone = parseInt(this.multipleLastStart, 10);\n                const maxPhone = parseInt(this.multipleLastEnd, 10);\n\n                for (let i = minPhone; i <= maxPhone; i++){\n                    const currentI: string = i + '';\n                    const sPhone    = currentI.padStart(4, '0');\n\n                    const retInsert = await this.db.addPhone(\n                        (this.ddd.length === 1) ? '0' + this.ddd : this.ddd,\n                        this.multiplePhone + sPhone\n                    );\n                }\n            }\n\n            setTimeout(() => {\n                this.modalController.dismiss({\n                    reload: true,\n                    newId: 0\n                });\n            }, 400);\n        }\n    }\n\n    segmentChanged(event: any) {\n        // console.log(event);\n    }\n}\n"]}