{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/pg-add-content/pg-add-content.page.html","./src/app/pg-add-phone/pg-add-phone.page.html","./src/app/pg-add-content/pg-add-content.page.scss","./src/app/pg-add-content/pg-add-content.page.ts","./src/app/pg-add-phone/pg-add-phone.page.scss","./src/app/pg-add-phone/pg-add-phone.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n    <ion-toolbar> <!-- mode=\\\"ios\\\" -->\\n        <ion-buttons slot=\\\"start\\\" (click)=\\\"close()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/close.svg\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title class=\\\"toolbar-title\\\">\\n            {{ strTitle }} Registro\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" (click)=\\\"save()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/ok.svg\\\" color=\\\"success\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n    <div class=\\\"home-header\\\">\\n        <h1 class=\\\"title\\\">{{ strTitle }}</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <ion-card class=\\\"card-history\\\">\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Data *</ion-label>\\n                    <ion-datetime\\n                        name=\\\"mes_base\\\"\\n                        [(ngModel)]=\\\"frmContent.date\\\"\\n                        display-format=\\\"DD/MM/YYYY\\\"\\n                        picker-format=\\\"DD MMMM YYYY\\\"\\n                        month-names=\\\"Janeiro, Fevereiro, Março, Abril, Maio, Junho, Julho, Agosto, Setembro, Outubro, Novembro, Dezembro\\\"\\n                        (ionCancel)=\\\"clearInput('date')\\\"\\n                        cancelText=\\\"Limpar\\\"\\n                        doneText=\\\"Selecionar\\\"\\n                        class=\\\"ion-text-start\\\"\\n                    ></ion-datetime>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Tipo *</ion-label>\\n                    <ion-select interface=\\\"action-sheet\\\" [(ngModel)]=\\\"frmContent.type\\\"> <!-- popover -->\\n                        <ion-select-option *ngFor=\\\"let type of arrContactTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Nome</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.name\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Texto</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Publicação</ion-label>\\n                    <ion-input [(ngModel)]=\\\"frmContent.publication\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Anotações *</ion-label>\\n                    <ion-textarea [(ngModel)]=\\\"frmContent.notes\\\" autoGrow=\\\"true\\\"></ion-textarea>\\n                </ion-item>\\n            </ion-card-content>\\n\\n            <ion-button (click)=\\\"delete()\\\" *ngIf=\\\"type === 'edit'\\\" color=\\\"danger\\\" expand=\\\"block\\\" id=\\\"btn-delete\\\">\\n                <ion-icon slot=\\\"start\\\" src=\\\"assets/trash.svg\\\"></ion-icon>\\n                Deletar Registro\\n            </ion-button>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n  \";","export default \"<ion-header>\\n    <ion-toolbar> <!-- mode=\\\"ios\\\" -->\\n        <ion-buttons slot=\\\"start\\\" (click)=\\\"close()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/close.svg\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title class=\\\"toolbar-title\\\">\\n            Adicionar Telefone\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" (click)=\\\"save()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/ok.svg\\\" color=\\\"success\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n    <div class=\\\"home-header\\\">\\n        <h1 class=\\\"title\\\">Adicionar</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <ion-card class=\\\"card-history\\\">\\n            <ion-card-header>\\n                <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"segmentValue\\\">\\n                    <ion-segment-button value=\\\"single\\\">\\n                        <ion-label>Único</ion-label>\\n                    </ion-segment-button>\\n                    <ion-segment-button value=\\\"multiple\\\">\\n                        <ion-label>Múltiplo</ion-label>\\n                    </ion-segment-button>\\n                </ion-segment>\\n            </ion-card-header>\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">DDD</ion-label>\\n                    <ion-input inputmode=\\\"tel\\\" [(ngModel)]=\\\"ddd\\\" maxlength=\\\"2\\\"></ion-input>\\n                </ion-item>\\n\\n                <div *ngIf=\\\"segmentValue === 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Telefone</ion-label>\\n                        <ion-input appMyNumberOnly inputmode=\\\"tel\\\" maxlength=\\\"9\\\" [(ngModel)]=\\\"singlePhone\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <div *ngIf=\\\"segmentValue !== 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Início Telefone</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"multiplePhone\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (de)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastStart\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (até)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastEnd\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n            </ion-card-content>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n  \";","export default \"ion-card-content {\\n  padding-left: 0 !important;\\n}\\n\\n.card-history {\\n  padding: 0 16px 20px 16px;\\n}\\n\\n#btn-delete {\\n  font-size: 14px;\\n}\\n\\n#btn-delete ion-icon {\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZWFuZHJvL05ldEJlYW5zUHJvamVjdHMvdGVzdGVtdW5oby10ZWxlZm9uZS9zcmMvYXBwL3BnLWFkZC1jb250ZW50L3BnLWFkZC1jb250ZW50LnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGctYWRkLWNvbnRlbnQvcGctYWRkLWNvbnRlbnQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMEJBQUE7QUNDSjs7QURDQTtFQUNJLHlCQUFBO0FDRUo7O0FEQUE7RUFDSSxlQUFBO0FDR0o7O0FEREk7RUFDSSxlQUFBO0FDR1IiLCJmaWxlIjoic3JjL2FwcC9wZy1hZGQtY29udGVudC9wZy1hZGQtY29udGVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZC1jb250ZW50IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cbi5jYXJkLWhpc3Rvcnkge1xuICAgIHBhZGRpbmc6IDAgMTZweCAyMHB4IDE2cHg7XG59XG4jYnRuLWRlbGV0ZSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuXG4gICAgaW9uLWljb24ge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxufSIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn1cblxuLmNhcmQtaGlzdG9yeSB7XG4gIHBhZGRpbmc6IDAgMTZweCAyMHB4IDE2cHg7XG59XG5cbiNidG4tZGVsZXRlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuI2J0bi1kZWxldGUgaW9uLWljb24ge1xuICBmb250LXNpemU6IDEycHg7XG59Il19 */\";","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nconst { Keyboard } = Plugins;\n\nimport * as moment from 'moment';\nimport { UtilsService } from '../utils.service';\nimport { DatabaseService, ContactInfo } from './../database.service';\n\n@Component({\n    selector: 'app-pg-add-content',\n    templateUrl: './pg-add-content.page.html',\n    styleUrls: ['./pg-add-content.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class PgAddContentPage implements OnInit {\n    @Input() type: string;\n    @Input() ddd: string;\n    @Input() phone: string;\n    @Input() idx: string;\n\n    strTitle = '';\n    arrContactTypes = [];\n    frmContent = {\n        date: '',\n        type: '',\n        name: '',\n        text: '',\n        publication: '',\n        notes : ''\n    };\n    contactInfo: ContactInfo;\n\n    constructor(\n        public modalController: ModalController,\n        private utilsSrv: UtilsService,\n        private db: DatabaseService,\n        private zone: NgZone,\n    ) {\n        this.arrContactTypes = db.getContactTypes();\n    }\n\n    async ngOnInit() {\n        this.frmContent.date = moment().format('YYYY-MM-DD');\n        this.strTitle        = (this.type === 'edit') ? 'Editar' : 'Adicionar';\n\n        const retContact     = await this.db.getContact(this.ddd, this.phone, this.idx);\n        if (retContact !== false) {\n            this.frmContent.date        = retContact.date;\n            this.frmContent.type        = retContact.type;\n            this.frmContent.name        = retContact.name;\n            this.frmContent.text        = retContact.text;\n            this.frmContent.publication = retContact.publication;\n            this.frmContent.notes       = retContact.anotations;\n        }\n    }\n\n    close() {\n        this.modalController.dismiss({\n            reload: false\n        });\n    }\n\n    clearInput(element: any){\n        this.frmContent[element] = '';\n    }\n\n    private validateData() {\n        const ret = {\n            error: false,\n            msg: ''\n        };\n\n        if ( this.frmContent.date === '' ){\n            ret.error = true;\n            ret.msg   = 'Informe a data';\n        } else if ( this.frmContent.type === '' ) {\n            ret.error = true;\n            ret.msg   = 'Selecione o tipo';\n        } else if ( this.frmContent.notes.trim().length < 2 ) {\n            ret.error = true;\n            ret.msg   = 'Insira uma anotação';\n        }\n\n        return ret;\n    }\n\n    async save() {\n        Keyboard.hide();\n\n        const retValidate = this.validateData();\n        if (retValidate.error){\n            this.utilsSrv.showAlert('Alerta', '', retValidate.msg, ['OK']);\n        } else {\n            this.contactInfo = {\n                ddd: this.ddd,\n                phone: this.phone,\n                date: this.frmContent.date,\n                type: this.frmContent.type,\n                name: this.frmContent.name,\n                text: this.frmContent.text,\n                publication: this.frmContent.publication,\n                anotations: this.frmContent.notes,\n            };\n\n            if (this.type === 'edit') {\n                const ret = await this.db.editContact(this.contactInfo, this.idx);\n            } else {\n                const ret = await this.db.addContact(this.contactInfo);\n            }\n\n            setTimeout(() => {\n                this.modalController.dismiss({\n                    reload: true,\n                });\n            }, 400);\n        }\n    }\n\n    async delete() {\n        this.utilsSrv.showAlert('Confirmação!', '', 'Deseja realmente deletar esse registro? Essa ação não poderá ser desfeita.', [\n            {\n                text: 'Não ...',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: (blah) => { }\n            }, {\n                text: 'Sim!',\n                handler: () => {\n                    this.postDelete();\n                }\n            }\n        ]);\n    }\n\n    private async postDelete() {\n        const ret = await this.db.deleteContact(this.ddd, this.phone, this.idx);\n        if (ret){\n            this.modalController.dismiss({\n                reload: true,\n            });\n        }\n    }\n}\n","export default \"ion-card-content {\\n  padding-left: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sZWFuZHJvL05ldEJlYW5zUHJvamVjdHMvdGVzdGVtdW5oby10ZWxlZm9uZS9zcmMvYXBwL3BnLWFkZC1waG9uZS9wZy1hZGQtcGhvbmUucGFnZS5zY3NzIiwic3JjL2FwcC9wZy1hZGQtcGhvbmUvcGctYWRkLXBob25lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wZy1hZGQtcGhvbmUvcGctYWRkLXBob25lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xufSIsImlvbi1jYXJkLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nconst { Keyboard } = Plugins;\n\nimport { UtilsService } from '../utils.service';\nimport { DatabaseService } from './../database.service';\n\n@Component({\n  selector: 'app-pg-add-phone',\n  templateUrl: './pg-add-phone.page.html',\n  styleUrls: ['./pg-add-phone.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class PgAddPhonePage implements OnInit {\n    segmentValue = 'single';\n    ddd: any;\n    singlePhone: any;\n    multiplePhone: any;\n    multipleLastStart: any;\n    multipleLastEnd: any;\n\n    constructor(\n        public modalController: ModalController,\n        private utilsSrv: UtilsService,\n        private db: DatabaseService,\n    ) { }\n\n    ngOnInit() {\n    }\n\n    close() {\n        this.modalController.dismiss({\n            reload: false\n        });\n    }\n\n    private validateData() {\n        const ret = {\n            error: false,\n            msg: ''\n        };\n\n        const vDDD               = (typeof this.ddd === 'undefined') ? 0 : parseInt(this.ddd, 10);\n        const vSinglePhone       = (typeof this.singlePhone !== 'undefined') ? this.singlePhone : '';\n        const vMultiplePhone     = (typeof this.multiplePhone !== 'undefined') ? this.multiplePhone : '';\n        const vMultipleLastStart = (typeof this.multipleLastStart !== 'undefined') ? this.multipleLastStart : '';\n        const vMultipleLastEnd   = (typeof this.multipleLastEnd !== 'undefined') ? this.multipleLastEnd : '';\n\n        if ( vDDD <= 0 || vDDD > 99 ){\n            ret.error = true;\n            ret.msg   = 'Informe o DDD entre 01 e 99';\n        } else {\n            if (this.segmentValue === 'single'){\n                if (vSinglePhone.length !== 9 && vSinglePhone.length !== 8){\n                    ret.error = true;\n                    ret.msg   = 'Informe o telefone com 8 ou 9 dígitos';\n                }\n            } else {\n                if (vMultiplePhone.length !== 5 && vMultiplePhone.length !== 4){\n                    ret.error = true;\n                    ret.msg   = 'Informe o início do telefone com 4 ou 5 dígitos';\n                } else if (vMultipleLastStart.length !== 4 || vMultipleLastEnd.length !== 4) {\n                    ret.error = true;\n                    ret.msg   = 'Informe os últimos dígitos do telefone com 4 dígitos';\n                } else {\n                    const minPhone = parseInt(this.multipleLastStart, 10);\n                    const maxPhone = parseInt(this.multipleLastEnd, 10);\n\n                    if (minPhone >= maxPhone){\n                        ret.error = true;\n                        ret.msg   = 'Informe o último número (de:) menor que o último número (para:)';\n                    } else if (maxPhone - minPhone > 100) {\n                        ret.error = true;\n                        ret.msg   = 'Só é permitido inserir 100 números por vez!';\n                    }\n                }\n            }\n        }\n\n        return ret;\n    }\n\n    async save() {\n        Keyboard.hide();\n\n        const retValidate = this.validateData();\n        if (retValidate.error){\n            this.utilsSrv.showAlert('Alerta', '', retValidate.msg, ['OK']);\n        } else {\n            if (this.segmentValue === 'single'){\n                const retInsert = await this.db.addPhone(\n                    (this.ddd.length === 1) ? '0' + this.ddd : this.ddd,\n                    this.singlePhone\n                );\n            } else {\n                const minPhone = parseInt(this.multipleLastStart, 10);\n                const maxPhone = parseInt(this.multipleLastEnd, 10);\n\n                for (let i = minPhone; i <= maxPhone; i++){\n                    const currentI: string = i + '';\n                    const sPhone    = currentI.padStart(4, '0');\n\n                    const retInsert = await this.db.addPhone(\n                        (this.ddd.length === 1) ? '0' + this.ddd : this.ddd,\n                        this.multiplePhone + sPhone\n                    );\n                }\n            }\n\n            setTimeout(() => {\n                this.modalController.dismiss({\n                    reload: true,\n                    newId: 0\n                });\n            }, 400);\n        }\n    }\n\n    segmentChanged(event: any) {\n        // console.log(event);\n    }\n}\n"],"sourceRoot":"webpack:///"}