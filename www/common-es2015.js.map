{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/pg-add-phone/pg-add-phone.page.html","./src/app/pg-add-phone/pg-add-phone.page.scss","./src/app/pg-add-phone/pg-add-phone.page.ts","./src/app/utils.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,80FAA+wF,E;;;;;;;;;;;;ACA9xF;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;;;;;;;;ACAlK;AACD;AACD;AAQhD,IAAa,cAAc;AAD3B,mDAAmD;AACnD,MAAa,cAAc;IAQvB,YACW,eAAgC,EAC/B,QAAsB;QADvB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAc;QATlC,iBAAY,GAAG,QAAQ,CAAC;IAUpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,KAAK;QACD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YACzB,MAAM,EAAE,KAAK;SAChB,CAAC,CAAC;IACP,CAAC;IAEO,YAAY;QAChB,MAAM,GAAG,GAAG;YACR,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,EAAE;SACV,CAAC;QAEF,MAAM,IAAI,GAAiB,CAAC,OAAO,IAAI,CAA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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n    <ion-toolbar mode=\\\"ios\\\">\\n        <ion-buttons slot=\\\"start\\\" (click)=\\\"close()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/close.svg\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>\\n            Adicionar Telefone\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" (click)=\\\"save()\\\">\\n            <ion-icon class=\\\"icon-header\\\" slot=\\\"icon-only\\\" src=\\\"assets/ok.svg\\\" color=\\\"success\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n    <div class=\\\"home-header\\\">\\n        <h1 class=\\\"title\\\">Adicionar</h1>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <ion-card class=\\\"card-history\\\">\\n            <ion-card-header>\\n                <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"segmentValue\\\">\\n                    <ion-segment-button value=\\\"single\\\">\\n                        <ion-label>Único</ion-label>\\n                    </ion-segment-button>\\n                    <ion-segment-button value=\\\"multiple\\\">\\n                        <ion-label>Múltiplo</ion-label>\\n                    </ion-segment-button>\\n                </ion-segment>\\n            </ion-card-header>\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">DDD</ion-label>\\n                    <ion-input inputmode=\\\"tel\\\" [(ngModel)]=\\\"ddd\\\" maxlength=\\\"2\\\"></ion-input>\\n                </ion-item>\\n\\n                <div *ngIf=\\\"segmentValue === 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Telefone</ion-label>\\n                        <ion-input appMyNumberOnly inputmode=\\\"tel\\\" maxlength=\\\"9\\\" [(ngModel)]=\\\"singlePhone\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <div *ngIf=\\\"segmentValue !== 'single'\\\">\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Início Telefone</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"multiplePhone\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (de)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastStart\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Últimos dígitos (até)</ion-label>\\n                        <ion-input inputmode=\\\"tel\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"multipleLastEnd\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n            </ion-card-content>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BnLWFkZC1waG9uZS9wZy1hZGQtcGhvbmUucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { UtilsService } from '../utils.service';\n\n@Component({\n  selector: 'app-pg-add-phone',\n  templateUrl: './pg-add-phone.page.html',\n  styleUrls: ['./pg-add-phone.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class PgAddPhonePage implements OnInit {\n    segmentValue = 'single';\n    ddd: any;\n    singlePhone: any;\n    multiplePhone: any;\n    multipleLastStart: any;\n    multipleLastEnd: any;\n\n    constructor(\n        public modalController: ModalController,\n        private utilsSrv: UtilsService\n    ) { }\n\n    ngOnInit() {\n    }\n\n    close() {\n        this.modalController.dismiss({\n            reload: false\n        });\n    }\n\n    private validateData() {\n        const ret = {\n            error: false,\n            msg: ''\n        };\n\n        const vDDD               = (typeof this.ddd === 'undefined') ? 0 : parseInt(this.ddd, 10);\n        const vSinglePhone       = (typeof this.singlePhone !== 'undefined') ? this.singlePhone : '';\n        const vMultiplePhone     = (typeof this.multiplePhone !== 'undefined') ? this.multiplePhone : '';\n        const vMultipleLastStart = (typeof this.multipleLastStart !== 'undefined') ? this.multipleLastStart : '';\n        const vMultipleLastEnd   = (typeof this.multipleLastEnd !== 'undefined') ? this.multipleLastEnd : '';\n\n        if ( vDDD <= 0 || vDDD > 99 ){\n            ret.error = true;\n            ret.msg   = 'Informe o DDD entre 01 e 99';\n        } else {\n            if (this.segmentValue === 'single'){\n                if (vSinglePhone.length !== 9 && vSinglePhone.length !== 8){\n                    ret.error = true;\n                    ret.msg   = 'Informe o telefone com 8 ou 9 dígitos';\n                }\n            } else {\n                if (vMultiplePhone.length !== 5 && vMultiplePhone.length !== 4){\n                    ret.error = true;\n                    ret.msg   = 'Informe o início do telefone com 4 ou 5 dígitos';\n                } else if (vMultipleLastStart.length !== 4 || vMultipleLastEnd.length !== 4) {\n                    ret.error = true;\n                    ret.msg   = 'Informe os últimos dígitos do telefone com 4 dígitos';\n                } else {\n                    const minPhone = parseInt(this.multipleLastStart, 10);\n                    const maxPhone = parseInt(this.multipleLastEnd, 10);\n\n                    if (minPhone >= maxPhone){\n                        ret.error = true;\n                        ret.msg   = 'Informe o último número (de:) menor que o último número (para:)';\n                    }\n                }\n            }\n        }\n\n        return ret;\n    }\n\n    save() {\n        const retValidate = this.validateData();\n        if (retValidate.error){\n            this.utilsSrv.showAlert('Alerta', '', retValidate.msg, ['OK']);\n        } else {\n            const arrPhones = [];\n            const phoneItem = {\n                ddd : '',\n                phone : ''\n            };\n            phoneItem.ddd = (this.ddd.length === 1) ? '0' + this.ddd : this.ddd;\n\n            if (this.segmentValue === 'single'){\n                phoneItem.phone = this.singlePhone;\n                arrPhones.push(phoneItem);\n            } else {\n                \n            }\n\n            console.log(arrPhones);\n\n            this.modalController.dismiss({\n                reload: true,\n                newId: 0\n            });\n        }\n    }\n\n    segmentChanged(event: any) {\n        // console.log(event);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController, AlertController, Platform } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor(\n    private loadingCtr: LoadingController,\n    private alertCtr: AlertController,\n    public platform: Platform,\n  ) { }\n\n  public getAppVersion() {\n    return '1.0.0';\n  }\n\n  async getLoader(message: any, spinner: any) {\n    return await this.loadingCtr.create({\n      message,\n      spinner,\n    }).then((res) => {\n      res.present();\n\n      const TIME_IN_MS = 5000;\n      const hideFooterTimeout = setTimeout( () => {\n        this.closeLoader();\n      }, TIME_IN_MS);\n    });\n  }\n\n  async closeLoader() {\n    try {\n      return await this.loadingCtr.dismiss();\n    } catch (err) {\n      return;\n    }\n  }\n\n  async showAlert(header: string, subHeader: string, message: string, buttons: any) {\n    const alert = await this.alertCtr.create({\n      header,\n      subHeader,\n      message,\n      buttons,\n    });\n    return await alert.present();\n  }\n\n  isMobileBrowser() {\n    // is this web-browser on mobile device\n    return this.platform.is('mobileweb');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}