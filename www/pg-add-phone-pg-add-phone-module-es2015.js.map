{"version":3,"sources":["./src/app/database.service.ts","./src/app/pg-add-phone/pg-add-phone-routing.module.ts","./src/app/pg-add-phone/pg-add-phone.module.ts","./src/app/utils.service.ts"],"names":[],"mappings":"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","file":"pg-add-phone-pg-add-phone-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Storage } = Plugins;\n\nexport interface ContactInfo {\n    ddd: string;\n    phone: string;\n    date: string;\n    type: string;\n    name: string;\n    text: string;\n    publication: string;\n    anotations: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  keyPhones = 'phones';\n  allPhones: [] = null;\n\n  constructor() { }\n\n  public async getAllPhones() {\n    let arrPhone: [];\n\n    if (this.allPhones){\n        arrPhone = this.allPhones;\n    } else {\n        const retPhones = await Storage.get({ key: this.keyPhones });\n        const dbPhone   = (typeof retPhones.value !== 'undefined' && retPhones.value !== null) ? retPhones.value : '[]';\n        arrPhone  = JSON.parse(dbPhone);\n        this.allPhones  = arrPhone;\n    }\n\n    arrPhone.sort((a: any, b: any) => {\n        const keyA = a.ddd + a.phone;\n        const keyB = b.ddd + b.phone;\n\n        if (keyA < keyB){\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n\n    return arrPhone;\n  }\n\n  private async savePhones(allPhones: []) {\n    Storage.set({\n        key: this.keyPhones,\n        value: JSON.stringify(allPhones)\n    });\n  }\n\n  public async addPhone(ddd: string, phone: string) {\n    const allPhones: any = await this.getAllPhones();\n    const checkPhone     = await this.getPhone(ddd, phone);\n\n    if (checkPhone == null){\n        allPhones.push({\n            ddd,\n            phone,\n            content : []\n        });\n\n        this.savePhones(allPhones);\n\n        return true;\n    } else {\n        return false;\n    }\n  }\n\n  public async getPhone(ddd: string, phone: string) {\n    let retPhone         = null;\n    const arrPhones: any = await this.getAllPhones();\n\n    for (const loopPhone of arrPhones) {\n        const loopDDD    = loopPhone.ddd;\n        const loopNumber = loopPhone.phone;\n\n        if ( loopDDD === ddd && loopNumber === phone ){\n            retPhone = loopPhone;\n            break;\n        }\n    }\n\n    return retPhone;\n  }\n\n  public async deletePhone(ddd: string, phone: string) {\n    const allPhones: any = await this.getAllPhones();\n    let deleted          = false;\n\n    for (let i = 0; i < allPhones.length; i++) {\n        if (allPhones[i].ddd === ddd && allPhones[i].phone === phone) {\n            allPhones.splice(i, 1);\n            deleted = true;\n            break;\n        }\n    }\n\n    if (deleted) {\n        this.savePhones(allPhones);\n    }\n\n    return deleted;\n  }\n\n  public getContactTypes() {\n      const arrTypes = [];\n\n      arrTypes.push('Fora de área');\n      arrTypes.push('Caixa postal');\n      arrTypes.push('Atendeu');\n      arrTypes.push('Revisita');\n      arrTypes.push('Não Atendeu');\n      arrTypes.push('Não quer retorno');\n\n      return arrTypes;\n  }\n\n  private async saveContact(contactInfo: ContactInfo, idx: string = '') {\n    const isEdit  = idx !== '';\n    const dateErr = contactInfo.date === '';\n    const typeErr = contactInfo.type === '';\n\n    if (!dateErr && !typeErr) {\n        const allPhones: any = await this.getAllPhones();\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < allPhones.length; i++) {\n            const dddLoop   = allPhones[i].ddd;\n            const phoneLoop = allPhones[i].phone;\n\n            if (dddLoop === contactInfo.ddd && phoneLoop === contactInfo.phone) {\n                const newInfo = {\n                    date: contactInfo.date,\n                    type: contactInfo.type,\n                    name: contactInfo.name,\n                    text: contactInfo.text,\n                    publication: contactInfo.publication,\n                    anotations: contactInfo.anotations,\n                };\n\n                if ( isEdit ) {\n                    allPhones[i].content[idx] = newInfo;\n                } else {\n                    allPhones[i].content.push(newInfo);\n                }\n\n                allPhones[i].content.sort((a: any, b: any) => {\n                    const keyA = a.date;\n                    const keyB = b.date;\n\n                    if (keyA > keyB){\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                });\n\n                this.savePhones(allPhones);\n                return true;\n            }\n        }\n    }\n\n    return false;\n  }\n\n  public async addContact(contactInfo: ContactInfo) {\n    this.saveContact(contactInfo);\n  }\n\n  public async editContact(contactInfo: ContactInfo, idx: string) {\n    this.saveContact(contactInfo, idx);\n  }\n\n  public async getContact(ddd: string, phone: string, idx: string) {\n    const obPhone = await this.getPhone(ddd, phone);\n    if (obPhone !== false) {\n        const contact = obPhone.content[idx];\n        if (typeof contact !== 'undefined') {\n            return contact;\n        }\n    }\n\n    return false;\n  }\n\n  public async getLastContactInfo(ddd: string, phone: string) {\n    const obPhone = await this.getPhone(ddd, phone);\n    if (obPhone !== false) {\n        const lastContact = obPhone.content[0];\n        if (typeof lastContact !== 'undefined') {\n            return lastContact;\n        }\n    }\n\n    return false;\n  }\n\n  public async deleteContact(ddd: string, phone: string, idx: string) {\n    const allPhones: any = await this.getAllPhones();\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < allPhones.length; i++) {\n        const dddLoop   = allPhones[i].ddd;\n        const phoneLoop = allPhones[i].phone;\n\n        if (dddLoop === ddd && phoneLoop === phone) {\n            allPhones[i].content.splice(idx, 1);\n            this.savePhones(allPhones);\n            return true;\n        }\n    }\n\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PgAddPhonePage } from './pg-add-phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PgAddPhonePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PgAddPhonePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PgAddPhonePageRoutingModule } from './pg-add-phone-routing.module';\n\nimport { PgAddPhonePage } from './pg-add-phone.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PgAddPhonePageRoutingModule\n  ],\n  declarations: [PgAddPhonePage]\n})\nexport class PgAddPhonePageModule {}\n","import { Injectable } from '@angular/core';\nimport { LoadingController, AlertController, Platform } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor(\n    private loadingCtr: LoadingController,\n    private alertCtr: AlertController,\n    public platform: Platform,\n  ) { }\n\n  public getAppVersion() {\n    return '1.0.2';\n  }\n\n  async getLoader(message: any, spinner: any) {\n    return await this.loadingCtr.create({\n      message,\n      spinner,\n    }).then((res) => {\n      res.present();\n\n      const TIME_IN_MS = 5000;\n      const hideFooterTimeout = setTimeout( () => {\n        this.closeLoader();\n      }, TIME_IN_MS);\n    });\n  }\n\n  async closeLoader() {\n    try {\n      return await this.loadingCtr.dismiss();\n    } catch (err) {\n      return;\n    }\n  }\n\n  async showAlert(header: string, subHeader: string, message: string, buttons: any) {\n    const alert = await this.alertCtr.create({\n      header,\n      subHeader,\n      message,\n      buttons,\n    });\n    return await alert.present();\n  }\n\n  isMobileBrowser() {\n    // is this web-browser on mobile device\n    return this.platform.is('mobileweb');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}