{"version":3,"sources":["webpack:///src/app/database.service.ts","webpack:///src/app/pg-add-phone/pg-add-phone-routing.module.ts","webpack:///src/app/pg-add-phone/pg-add-phone.module.ts","webpack:///src/app/utils.service.ts"],"names":["Storage","DatabaseService","keyPhones","allPhones","arrPhone","get","key","retPhones","dbPhone","value","JSON","parse","sort","a","b","keyA","ddd","phone","keyB","set","stringify","getAllPhones","getPhone","checkPhone","push","content","savePhones","retPhone","arrPhones","loopPhone","loopDDD","loopNumber","deleted","i","length","splice","arrTypes","contactInfo","idx","isEdit","dateErr","date","typeErr","type","dddLoop","phoneLoop","newInfo","name","text","publication","anotations","saveContact","obPhone","contact","lastContact","providedIn","routes","path","component","PgAddPhonePageRoutingModule","imports","forChild","exports","PgAddPhonePageModule","declarations","UtilsService","loadingCtr","alertCtr","platform","message","spinner","create","then","res","present","TIME_IN_MS","hideFooterTimeout","setTimeout","closeLoader","dismiss","header","subHeader","buttons","alert","is"],"mappings":"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","file":"pg-add-phone-pg-add-phone-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Storage } = Plugins;\n\nexport interface ContactInfo {\n    ddd: string;\n    phone: string;\n    date: string;\n    type: string;\n    name: string;\n    text: string;\n    publication: string;\n    anotations: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  keyPhones = 'phones';\n  allPhones: [] = null;\n\n  constructor() { }\n\n  public async getAllPhones() {\n    let arrPhone: [];\n\n    if (this.allPhones){\n        arrPhone = this.allPhones;\n    } else {\n        const retPhones = await Storage.get({ key: this.keyPhones });\n        const dbPhone   = (typeof retPhones.value !== 'undefined' && retPhones.value !== null) ? retPhones.value : '[]';\n        arrPhone  = JSON.parse(dbPhone);\n        this.allPhones  = arrPhone;\n    }\n\n    arrPhone.sort((a: any, b: any) => {\n        const keyA = a.ddd + a.phone;\n        const keyB = b.ddd + b.phone;\n\n        if (keyA < keyB){\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n\n    return arrPhone;\n  }\n\n  private async savePhones(allPhones: []) {\n    Storage.set({\n        key: this.keyPhones,\n        value: JSON.stringify(allPhones)\n    });\n  }\n\n  public async addPhone(ddd: string, phone: string) {\n    const allPhones: any = await this.getAllPhones();\n    const checkPhone     = await this.getPhone(ddd, phone);\n\n    if (checkPhone == null){\n        allPhones.push({\n            ddd,\n            phone,\n            content : []\n        });\n\n        this.savePhones(allPhones);\n\n        return true;\n    } else {\n        return false;\n    }\n  }\n\n  public async getPhone(ddd: string, phone: string) {\n    let retPhone         = null;\n    const arrPhones: any = await this.getAllPhones();\n\n    for (const loopPhone of arrPhones) {\n        const loopDDD    = loopPhone.ddd;\n        const loopNumber = loopPhone.phone;\n\n        if ( loopDDD === ddd && loopNumber === phone ){\n            retPhone = loopPhone;\n            break;\n        }\n    }\n\n    return retPhone;\n  }\n\n  public async deletePhone(ddd: string, phone: string) {\n    const allPhones: any = await this.getAllPhones();\n    let deleted          = false;\n\n    for (let i = 0; i < allPhones.length; i++) {\n        if (allPhones[i].ddd === ddd && allPhones[i].phone === phone) {\n            allPhones.splice(i, 1);\n            deleted = true;\n            break;\n        }\n    }\n\n    if (deleted) {\n        this.savePhones(allPhones);\n    }\n\n    return deleted;\n  }\n\n  public getContactTypes() {\n      const arrTypes = [];\n\n      arrTypes.push('Não existe');\n      arrTypes.push('Fora de área');\n      arrTypes.push('Caixa postal');\n      arrTypes.push('Atendeu');\n      arrTypes.push('Revisita');\n      arrTypes.push('Não Atendeu');\n      arrTypes.push('Não quer retorno');\n\n      return arrTypes;\n  }\n\n  private async saveContact(contactInfo: ContactInfo, idx: string = '') {\n    const isEdit  = idx !== '';\n    const dateErr = contactInfo.date === '';\n    const typeErr = contactInfo.type === '';\n\n    if (!dateErr && !typeErr) {\n        const allPhones: any = await this.getAllPhones();\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < allPhones.length; i++) {\n            const dddLoop   = allPhones[i].ddd;\n            const phoneLoop = allPhones[i].phone;\n\n            if (dddLoop === contactInfo.ddd && phoneLoop === contactInfo.phone) {\n                const newInfo = {\n                    date: contactInfo.date,\n                    type: contactInfo.type,\n                    name: contactInfo.name,\n                    text: contactInfo.text,\n                    publication: contactInfo.publication,\n                    anotations: contactInfo.anotations,\n                };\n\n                if ( isEdit ) {\n                    allPhones[i].content[idx] = newInfo;\n                } else {\n                    allPhones[i].content.push(newInfo);\n                }\n\n                allPhones[i].content.sort((a: any, b: any) => {\n                    const keyA = a.date;\n                    const keyB = b.date;\n\n                    if (keyA > keyB){\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                });\n\n                this.savePhones(allPhones);\n                return true;\n            }\n        }\n    }\n\n    return false;\n  }\n\n  public async addContact(contactInfo: ContactInfo) {\n    this.saveContact(contactInfo);\n  }\n\n  public async editContact(contactInfo: ContactInfo, idx: string) {\n    this.saveContact(contactInfo, idx);\n  }\n\n  public async getContact(ddd: string, phone: string, idx: string) {\n    const obPhone = await this.getPhone(ddd, phone);\n    if (obPhone !== false) {\n        const contact = obPhone.content[idx];\n        if (typeof contact !== 'undefined') {\n            return contact;\n        }\n    }\n\n    return false;\n  }\n\n  public async getLastContactInfo(ddd: string, phone: string) {\n    const obPhone = await this.getPhone(ddd, phone);\n    if (obPhone !== false) {\n        const lastContact = obPhone.content[0];\n        if (typeof lastContact !== 'undefined') {\n            return lastContact;\n        }\n    }\n\n    return false;\n  }\n\n  public async deleteContact(ddd: string, phone: string, idx: string) {\n    const allPhones: any = await this.getAllPhones();\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < allPhones.length; i++) {\n        const dddLoop   = allPhones[i].ddd;\n        const phoneLoop = allPhones[i].phone;\n\n        if (dddLoop === ddd && phoneLoop === phone) {\n            allPhones[i].content.splice(idx, 1);\n            this.savePhones(allPhones);\n            return true;\n        }\n    }\n\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PgAddPhonePage } from './pg-add-phone.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PgAddPhonePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PgAddPhonePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PgAddPhonePageRoutingModule } from './pg-add-phone-routing.module';\n\nimport { PgAddPhonePage } from './pg-add-phone.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PgAddPhonePageRoutingModule\n  ],\n  declarations: [PgAddPhonePage]\n})\nexport class PgAddPhonePageModule {}\n","import { Injectable } from '@angular/core';\nimport { LoadingController, AlertController, Platform } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n  constructor(\n    private loadingCtr: LoadingController,\n    private alertCtr: AlertController,\n    public platform: Platform,\n  ) { }\n\n  public getAppVersion() {\n    return '1.1.0';\n  }\n\n  async getLoader(message: any, spinner: any) {\n    return await this.loadingCtr.create({\n      message,\n      spinner,\n    }).then((res) => {\n      res.present();\n\n      const TIME_IN_MS = 5000;\n      const hideFooterTimeout = setTimeout( () => {\n        this.closeLoader();\n      }, TIME_IN_MS);\n    });\n  }\n\n  async closeLoader() {\n    try {\n      return await this.loadingCtr.dismiss();\n    } catch (err) {\n      return;\n    }\n  }\n\n  async showAlert(header: string, subHeader: string, message: string, buttons: any) {\n    const alert = await this.alertCtr.create({\n      header,\n      subHeader,\n      message,\n      buttons,\n    });\n    return await alert.present();\n  }\n\n  isMobileBrowser() {\n    // is this web-browser on mobile device\n    return this.platform.is('mobileweb');\n  }\n\n}\n"]}